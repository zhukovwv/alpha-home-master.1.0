(function() {
	var $ = jQuery,
		pauseId = 'jQuery.pause',
		uuid = 1,
		oldAnimate = $.fn.animate,
		anims = {};

	function now() { return new Date().getTime(); }

	$.fn.animate = function(prop, speed, easing, callback) {
		var optall = $.speed(speed, easing, callback);
		optall.complete = optall.old; // unwrap callback
		return this.each(function() {
			// check pauseId
			if (! this[pauseId])
				this[pauseId] = uuid++;
			// start animation
			var opt = $.extend({}, optall);
			oldAnimate.apply($(this), [prop, $.extend({}, opt)]);
			// store data
			anims[this[pauseId]] = {
				run: true,
				prop: prop,
				opt: opt,
				start: now(),
				done: 0
			};
		});
	};

	$.fn.pause = function() {
		return this.each(function() {
			// check pauseId
			if (! this[pauseId])
				this[pauseId] = uuid++;
			// fetch data
			var data = anims[this[pauseId]];
			if (data && data.run) {
				data.done += now() - data.start;
				if (data.done > data.opt.duration) {
					// remove stale entry
					delete anims[this[pauseId]];
				} else {
					// pause animation
					$(this).stop();
					data.run = false;
				}
			}
		});
	};

	$.fn.resume = function() {
		return this.each(function() {
			// check pauseId
			if (! this[pauseId])
				this[pauseId] = uuid++;
			// fetch data
			var data = anims[this[pauseId]];
			if (data && ! data.run) {
				// resume animation
				data.opt.duration -= data.done;
				data.done = 0;
				data.run = true;
				data.start = now();
				oldAnimate.apply($(this), [data.prop, $.extend({}, data.opt)]);
			}
		});
	};
})();

$(document).ready(function() {
    var window_width = 944;
    
    var animating = false;
    var clone_animating = false;
    var is_this_first_cycle = true;
    
    var lane = $('.horizontal_scroller ul');
    var lane_width = lane.width();
    
    var lane_clone = lane.clone().insertAfter(lane).hide();
    
	lane_clone.css('margin-left', window_width);
    
	function scroll_lane()
    {
        animating = true;
        lane.show();
		lane.delay(is_this_first_cycle ? 1000 : 0).animate(
            {
                'margin-left': is_this_first_cycle ? -lane.width()-window_width : -lane.width()
            },
            {
                duration: 30000,
                easing: 'linear',
                step: function(now, fx) {
                    if(now <= -lane.width()+window_width && !clone_animating) {
                        clone_animating = true;
                        lane_clone.show();
                        lane_clone.animate(
                            {
                                'margin-left': -lane.width()
                            },
                            {
                                duration: 30000,
                                easing: 'linear',
                                step: function(now, fx) {
                                    if(now <= -lane.width()+window_width && !animating) {
                                        animating = true;
                                        scroll_lane();
                                    }
                                },
                                complete: function() {
                                    clone_animating = false;
                                    lane_clone.hide().css('margin-left', window_width); 
                                }
                            }
                        );
                    }
                },
                complete: function() {
                    is_this_first_cycle = false;
                    animating = false;
                    lane.hide().css('margin-left', window_width); 
                }
            }
        );
	}
	scroll_lane();
	
	$('.horizontal_scroller').mouseenter(function(){
		$('.horizontal_scroller ul').pause();
	}).mouseleave(function(){
		$('.horizontal_scroller ul').resume();
	});

});